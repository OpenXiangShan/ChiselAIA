// Generated by CIRCT firtool-1.62.0
// Standard header to adapt well known macros for prints and assertions.

// Users can define 'ASSERT_VERBOSE_COND' to add an extra gate to assert error printing.
`ifndef ASSERT_VERBOSE_COND_
  `ifdef ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ (`ASSERT_VERBOSE_COND)
  `else  // ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ 1
  `endif // ASSERT_VERBOSE_COND
`endif // not def ASSERT_VERBOSE_COND_

// Users can define 'STOP_COND' to add an extra gate to stop conditions.
`ifndef STOP_COND_
  `ifdef STOP_COND
    `define STOP_COND_ (`STOP_COND)
  `else  // STOP_COND
    `define STOP_COND_ 1
  `endif // STOP_COND
`endif // not def STOP_COND_

module AXIRegIMSIC_WRAP(
  input         clock,
  input         reset,
  input         auto_axireg_axi4xbar_in_aw_valid,
  input  [5:0]  auto_axireg_axi4xbar_in_aw_bits_id,
  input  [16:0] auto_axireg_axi4xbar_in_aw_bits_addr,
  input  [7:0]  auto_axireg_axi4xbar_in_aw_bits_len,
  input  [2:0]  auto_axireg_axi4xbar_in_aw_bits_size,
  input  [1:0]  auto_axireg_axi4xbar_in_aw_bits_burst,
  input         auto_axireg_axi4xbar_in_aw_bits_lock,
  input  [3:0]  auto_axireg_axi4xbar_in_aw_bits_cache,
  input  [2:0]  auto_axireg_axi4xbar_in_aw_bits_prot,
  input  [3:0]  auto_axireg_axi4xbar_in_aw_bits_qos,
  input         auto_axireg_axi4xbar_in_w_valid,
  input  [31:0] auto_axireg_axi4xbar_in_w_bits_data,
  input  [3:0]  auto_axireg_axi4xbar_in_w_bits_strb,
  input         auto_axireg_axi4xbar_in_w_bits_last,
  input         auto_axireg_axi4xbar_in_b_ready,
  output        auto_axireg_axi4xbar_in_b_valid,
  output [5:0]  auto_axireg_axi4xbar_in_b_bits_id,
  output [1:0]  auto_axireg_axi4xbar_in_b_bits_resp,
  output        auto_axireg_axi4xbar_in_ar_ready,
  input         auto_axireg_axi4xbar_in_ar_valid,
  input  [5:0]  auto_axireg_axi4xbar_in_ar_bits_id,
  input  [16:0] auto_axireg_axi4xbar_in_ar_bits_addr,
  input  [7:0]  auto_axireg_axi4xbar_in_ar_bits_len,
  input  [2:0]  auto_axireg_axi4xbar_in_ar_bits_size,
  input  [1:0]  auto_axireg_axi4xbar_in_ar_bits_burst,
  input         auto_axireg_axi4xbar_in_ar_bits_lock,
  input  [3:0]  auto_axireg_axi4xbar_in_ar_bits_cache,
  input  [2:0]  auto_axireg_axi4xbar_in_ar_bits_prot,
  input  [3:0]  auto_axireg_axi4xbar_in_ar_bits_qos,
  input         auto_axireg_axi4xbar_in_r_ready,
  output        auto_axireg_axi4xbar_in_r_valid,
  output [5:0]  auto_axireg_axi4xbar_in_r_bits_id,
  output [31:0] auto_axireg_axi4xbar_in_r_bits_data,
  output [1:0]  auto_axireg_axi4xbar_in_r_bits_resp,
  output        auto_axireg_axi4xbar_in_r_bits_last,
  output [10:0] io_seteipnum,
  output        msiio_msi_vld_req,
  input         msiio_msi_vld_ack
);

  AXIRegIMSIC axireg (
    .clock                          (clock),
    .reset                          (reset),
    .auto_axi4xbar_in_aw_valid      (auto_axireg_axi4xbar_in_aw_valid),
    .auto_axi4xbar_in_aw_bits_id    (auto_axireg_axi4xbar_in_aw_bits_id),
    .auto_axi4xbar_in_aw_bits_addr  (auto_axireg_axi4xbar_in_aw_bits_addr),
    .auto_axi4xbar_in_aw_bits_len   (auto_axireg_axi4xbar_in_aw_bits_len),
    .auto_axi4xbar_in_aw_bits_size  (auto_axireg_axi4xbar_in_aw_bits_size),
    .auto_axi4xbar_in_aw_bits_burst (auto_axireg_axi4xbar_in_aw_bits_burst),
    .auto_axi4xbar_in_aw_bits_lock  (auto_axireg_axi4xbar_in_aw_bits_lock),
    .auto_axi4xbar_in_aw_bits_cache (auto_axireg_axi4xbar_in_aw_bits_cache),
    .auto_axi4xbar_in_aw_bits_prot  (auto_axireg_axi4xbar_in_aw_bits_prot),
    .auto_axi4xbar_in_aw_bits_qos   (auto_axireg_axi4xbar_in_aw_bits_qos),
    .auto_axi4xbar_in_w_valid       (auto_axireg_axi4xbar_in_w_valid),
    .auto_axi4xbar_in_w_bits_data   (auto_axireg_axi4xbar_in_w_bits_data),
    .auto_axi4xbar_in_w_bits_strb   (auto_axireg_axi4xbar_in_w_bits_strb),
    .auto_axi4xbar_in_w_bits_last   (auto_axireg_axi4xbar_in_w_bits_last),
    .auto_axi4xbar_in_b_ready       (auto_axireg_axi4xbar_in_b_ready),
    .auto_axi4xbar_in_b_valid       (auto_axireg_axi4xbar_in_b_valid),
    .auto_axi4xbar_in_b_bits_id     (auto_axireg_axi4xbar_in_b_bits_id),
    .auto_axi4xbar_in_b_bits_resp   (auto_axireg_axi4xbar_in_b_bits_resp),
    .auto_axi4xbar_in_ar_ready      (auto_axireg_axi4xbar_in_ar_ready),
    .auto_axi4xbar_in_ar_valid      (auto_axireg_axi4xbar_in_ar_valid),
    .auto_axi4xbar_in_ar_bits_id    (auto_axireg_axi4xbar_in_ar_bits_id),
    .auto_axi4xbar_in_ar_bits_addr  (auto_axireg_axi4xbar_in_ar_bits_addr),
    .auto_axi4xbar_in_ar_bits_len   (auto_axireg_axi4xbar_in_ar_bits_len),
    .auto_axi4xbar_in_ar_bits_size  (auto_axireg_axi4xbar_in_ar_bits_size),
    .auto_axi4xbar_in_ar_bits_burst (auto_axireg_axi4xbar_in_ar_bits_burst),
    .auto_axi4xbar_in_ar_bits_lock  (auto_axireg_axi4xbar_in_ar_bits_lock),
    .auto_axi4xbar_in_ar_bits_cache (auto_axireg_axi4xbar_in_ar_bits_cache),
    .auto_axi4xbar_in_ar_bits_prot  (auto_axireg_axi4xbar_in_ar_bits_prot),
    .auto_axi4xbar_in_ar_bits_qos   (auto_axireg_axi4xbar_in_ar_bits_qos),
    .auto_axi4xbar_in_r_ready       (auto_axireg_axi4xbar_in_r_ready),
    .auto_axi4xbar_in_r_valid       (auto_axireg_axi4xbar_in_r_valid),
    .auto_axi4xbar_in_r_bits_id     (auto_axireg_axi4xbar_in_r_bits_id),
    .auto_axi4xbar_in_r_bits_data   (auto_axireg_axi4xbar_in_r_bits_data),
    .auto_axi4xbar_in_r_bits_resp   (auto_axireg_axi4xbar_in_r_bits_resp),
    .auto_axi4xbar_in_r_bits_last   (auto_axireg_axi4xbar_in_r_bits_last),
    .io_seteipnum                   (io_seteipnum),
    .msiio_msi_vld_req              (msiio_msi_vld_req),
    .msiio_msi_vld_ack              (msiio_msi_vld_ack)
  );
endmodule

