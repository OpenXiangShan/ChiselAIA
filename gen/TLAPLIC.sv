// Generated by CIRCT firtool-1.62.0
// Standard header to adapt well known macros for prints and assertions.

// Users can define 'ASSERT_VERBOSE_COND' to add an extra gate to assert error printing.
`ifndef ASSERT_VERBOSE_COND_
  `ifdef ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ (`ASSERT_VERBOSE_COND)
  `else  // ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ 1
  `endif // ASSERT_VERBOSE_COND
`endif // not def ASSERT_VERBOSE_COND_

// Users can define 'STOP_COND' to add an extra gate to stop conditions.
`ifndef STOP_COND_
  `ifdef STOP_COND
    `define STOP_COND_ (`STOP_COND)
  `else  // STOP_COND
    `define STOP_COND_ 1
  `endif // STOP_COND
`endif // not def STOP_COND_

module TLAPLIC(
  input         clock,
  input         reset,
  input         auto_toIMSIC_out_a_ready,
  output        auto_toIMSIC_out_a_valid,
  output [1:0]  auto_toIMSIC_out_a_bits_size,
  output [4:0]  auto_toIMSIC_out_a_bits_source,
  output [31:0] auto_toIMSIC_out_a_bits_address,
  output [7:0]  auto_toIMSIC_out_a_bits_mask,
  output [63:0] auto_toIMSIC_out_a_bits_data,
  output        auto_toIMSIC_out_d_ready,
  input         auto_toIMSIC_out_d_valid,
  input  [2:0]  auto_toIMSIC_out_d_bits_opcode,
  input  [1:0]  auto_toIMSIC_out_d_bits_size,
  input  [4:0]  auto_toIMSIC_out_d_bits_source,
  output        auto_fromCPU_in_a_ready,
  input         auto_fromCPU_in_a_valid,
  input  [2:0]  auto_fromCPU_in_a_bits_opcode,
  input  [2:0]  auto_fromCPU_in_a_bits_param,
  input  [1:0]  auto_fromCPU_in_a_bits_size,
  input  [3:0]  auto_fromCPU_in_a_bits_source,
  input  [28:0] auto_fromCPU_in_a_bits_address,
  input  [7:0]  auto_fromCPU_in_a_bits_mask,
  input  [63:0] auto_fromCPU_in_a_bits_data,
  input         auto_fromCPU_in_a_bits_corrupt,
  input         auto_fromCPU_in_d_ready,
  output        auto_fromCPU_in_d_valid,
  output [2:0]  auto_fromCPU_in_d_bits_opcode,
  output [1:0]  auto_fromCPU_in_d_bits_size,
  output [3:0]  auto_fromCPU_in_d_bits_source,
  output [63:0] auto_fromCPU_in_d_bits_data,
  input         intSrcs_1,
  input         intSrcs_2,
  input         intSrcs_3,
  input         intSrcs_4,
  input         intSrcs_5,
  input         intSrcs_6,
  input         intSrcs_7,
  input         intSrcs_8,
  input         intSrcs_9,
  input         intSrcs_10,
  input         intSrcs_11,
  input         intSrcs_12,
  input         intSrcs_13,
  input         intSrcs_14,
  input         intSrcs_15,
  input         intSrcs_16,
  input         intSrcs_17,
  input         intSrcs_18,
  input         intSrcs_19,
  input         intSrcs_20,
  input         intSrcs_21,
  input         intSrcs_22,
  input         intSrcs_23,
  input         intSrcs_24,
  input         intSrcs_25,
  input         intSrcs_26,
  input         intSrcs_27,
  input         intSrcs_28,
  input         intSrcs_29,
  input         intSrcs_30,
  input         intSrcs_31,
  input         intSrcs_32,
  input         intSrcs_33,
  input         intSrcs_34,
  input         intSrcs_35,
  input         intSrcs_36,
  input         intSrcs_37,
  input         intSrcs_38,
  input         intSrcs_39,
  input         intSrcs_40,
  input         intSrcs_41,
  input         intSrcs_42,
  input         intSrcs_43,
  input         intSrcs_44,
  input         intSrcs_45,
  input         intSrcs_46,
  input         intSrcs_47,
  input         intSrcs_48,
  input         intSrcs_49,
  input         intSrcs_50,
  input         intSrcs_51,
  input         intSrcs_52,
  input         intSrcs_53,
  input         intSrcs_54,
  input         intSrcs_55,
  input         intSrcs_56,
  input         intSrcs_57,
  input         intSrcs_58,
  input         intSrcs_59,
  input         intSrcs_60,
  input         intSrcs_61,
  input         intSrcs_62,
  input         intSrcs_63,
  input         intSrcs_64,
  input         intSrcs_65,
  input         intSrcs_66,
  input         intSrcs_67,
  input         intSrcs_68,
  input         intSrcs_69,
  input         intSrcs_70,
  input         intSrcs_71,
  input         intSrcs_72,
  input         intSrcs_73,
  input         intSrcs_74,
  input         intSrcs_75,
  input         intSrcs_76,
  input         intSrcs_77,
  input         intSrcs_78,
  input         intSrcs_79,
  input         intSrcs_80,
  input         intSrcs_81,
  input         intSrcs_82,
  input         intSrcs_83,
  input         intSrcs_84,
  input         intSrcs_85,
  input         intSrcs_86,
  input         intSrcs_87,
  input         intSrcs_88,
  input         intSrcs_89,
  input         intSrcs_90,
  input         intSrcs_91,
  input         intSrcs_92,
  input         intSrcs_93,
  input         intSrcs_94,
  input         intSrcs_95,
  input         intSrcs_96,
  input         intSrcs_97,
  input         intSrcs_98,
  input         intSrcs_99,
  input         intSrcs_100,
  input         intSrcs_101,
  input         intSrcs_102,
  input         intSrcs_103,
  input         intSrcs_104,
  input         intSrcs_105,
  input         intSrcs_106,
  input         intSrcs_107,
  input         intSrcs_108,
  input         intSrcs_109,
  input         intSrcs_110,
  input         intSrcs_111,
  input         intSrcs_112,
  input         intSrcs_113,
  input         intSrcs_114,
  input         intSrcs_115,
  input         intSrcs_116,
  input         intSrcs_117,
  input         intSrcs_118,
  input         intSrcs_119,
  input         intSrcs_120,
  input         intSrcs_121,
  input         intSrcs_122,
  input         intSrcs_123,
  input         intSrcs_124,
  input         intSrcs_125,
  input         intSrcs_126,
  input         intSrcs_127
);

  wire        _aplic_ios_0_msi_valid;
  wire [63:0] _aplic_ios_0_msi_bits_addr;
  wire [31:0] _aplic_ios_0_msi_bits_data;
  wire        _aplic_ios_0_regmapIn_ready;
  wire        _aplic_ios_0_regmapOut_valid;
  wire        _aplic_ios_0_regmapOut_bits_read;
  wire [63:0] _aplic_ios_0_regmapOut_bits_data;
  wire        _aplic_ios_1_msi_valid;
  wire [63:0] _aplic_ios_1_msi_bits_addr;
  wire [31:0] _aplic_ios_1_msi_bits_data;
  wire        _aplic_ios_1_regmapIn_ready;
  wire        _aplic_ios_1_regmapOut_valid;
  wire        _aplic_ios_1_regmapOut_bits_read;
  wire [63:0] _aplic_ios_1_regmapOut_bits_data;
  wire        _toIMSIC_auto_in_1_a_ready;
  wire        _toIMSIC_auto_in_1_d_valid;
  wire        _toIMSIC_auto_in_0_a_ready;
  wire        _toIMSIC_auto_in_0_d_valid;
  wire        _fromCPU_auto_out_1_a_valid;
  wire [2:0]  _fromCPU_auto_out_1_a_bits_opcode;
  wire [2:0]  _fromCPU_auto_out_1_a_bits_param;
  wire [1:0]  _fromCPU_auto_out_1_a_bits_size;
  wire [3:0]  _fromCPU_auto_out_1_a_bits_source;
  wire [28:0] _fromCPU_auto_out_1_a_bits_address;
  wire [7:0]  _fromCPU_auto_out_1_a_bits_mask;
  wire [63:0] _fromCPU_auto_out_1_a_bits_data;
  wire        _fromCPU_auto_out_1_a_bits_corrupt;
  wire        _fromCPU_auto_out_1_d_ready;
  wire        _fromCPU_auto_out_0_a_valid;
  wire [2:0]  _fromCPU_auto_out_0_a_bits_opcode;
  wire [2:0]  _fromCPU_auto_out_0_a_bits_param;
  wire [1:0]  _fromCPU_auto_out_0_a_bits_size;
  wire [3:0]  _fromCPU_auto_out_0_a_bits_source;
  wire [28:0] _fromCPU_auto_out_0_a_bits_address;
  wire [7:0]  _fromCPU_auto_out_0_a_bits_mask;
  wire [63:0] _fromCPU_auto_out_0_a_bits_data;
  wire        _fromCPU_auto_out_0_a_bits_corrupt;
  wire        _fromCPU_auto_out_0_d_ready;
  wire        bits_a_mask_sub_0_2 =
    ~(_aplic_ios_0_msi_bits_addr[2]) & ~(_aplic_ios_0_msi_bits_addr[1]);
  wire        bits_a_mask_sub_1_2 =
    ~(_aplic_ios_0_msi_bits_addr[2]) & _aplic_ios_0_msi_bits_addr[1];
  wire        bits_a_mask_sub_2_2 =
    _aplic_ios_0_msi_bits_addr[2] & ~(_aplic_ios_0_msi_bits_addr[1]);
  wire        bits_a_mask_sub_3_2 =
    _aplic_ios_0_msi_bits_addr[2] & _aplic_ios_0_msi_bits_addr[1];
  wire        bits_a_mask_sub_0_2_1 =
    ~(_aplic_ios_1_msi_bits_addr[2]) & ~(_aplic_ios_1_msi_bits_addr[1]);
  wire        bits_a_mask_sub_1_2_1 =
    ~(_aplic_ios_1_msi_bits_addr[2]) & _aplic_ios_1_msi_bits_addr[1];
  wire        bits_a_mask_sub_2_2_1 =
    _aplic_ios_1_msi_bits_addr[2] & ~(_aplic_ios_1_msi_bits_addr[1]);
  wire        bits_a_mask_sub_3_2_1 =
    _aplic_ios_1_msi_bits_addr[2] & _aplic_ios_1_msi_bits_addr[1];
  reg  [3:0]  sourceReg;
  reg  [1:0]  sizeReg;
  wire [2:0]  domainFromCPUIn_d_bits_opcode = {2'h0, _aplic_ios_0_regmapOut_bits_read};
  reg  [3:0]  sourceReg_1;
  reg  [1:0]  sizeReg_1;
  wire [2:0]  domainFromCPUIn_1_d_bits_opcode = {2'h0, _aplic_ios_1_regmapOut_bits_read};
  always @(posedge clock) begin
    if (reset) begin
      sourceReg <= 4'h0;
      sizeReg <= 2'h0;
      sourceReg_1 <= 4'h0;
      sizeReg_1 <= 2'h0;
    end
    else begin
      if (_fromCPU_auto_out_0_a_valid) begin
        sourceReg <= _fromCPU_auto_out_0_a_bits_source;
        sizeReg <= _fromCPU_auto_out_0_a_bits_size;
      end
      if (_fromCPU_auto_out_1_a_valid) begin
        sourceReg_1 <= _fromCPU_auto_out_1_a_bits_source;
        sizeReg_1 <= _fromCPU_auto_out_1_a_bits_size;
      end
    end
  end // always @(posedge)
  TLXbar_6 fromCPU (
    .clock                     (clock),
    .reset                     (reset),
    .auto_in_a_ready           (auto_fromCPU_in_a_ready),
    .auto_in_a_valid           (auto_fromCPU_in_a_valid),
    .auto_in_a_bits_opcode     (auto_fromCPU_in_a_bits_opcode),
    .auto_in_a_bits_param      (auto_fromCPU_in_a_bits_param),
    .auto_in_a_bits_size       (auto_fromCPU_in_a_bits_size),
    .auto_in_a_bits_source     (auto_fromCPU_in_a_bits_source),
    .auto_in_a_bits_address    (auto_fromCPU_in_a_bits_address),
    .auto_in_a_bits_mask       (auto_fromCPU_in_a_bits_mask),
    .auto_in_a_bits_data       (auto_fromCPU_in_a_bits_data),
    .auto_in_a_bits_corrupt    (auto_fromCPU_in_a_bits_corrupt),
    .auto_in_d_ready           (auto_fromCPU_in_d_ready),
    .auto_in_d_valid           (auto_fromCPU_in_d_valid),
    .auto_in_d_bits_opcode     (auto_fromCPU_in_d_bits_opcode),
    .auto_in_d_bits_size       (auto_fromCPU_in_d_bits_size),
    .auto_in_d_bits_source     (auto_fromCPU_in_d_bits_source),
    .auto_in_d_bits_data       (auto_fromCPU_in_d_bits_data),
    .auto_out_1_a_ready        (_aplic_ios_1_regmapIn_ready),
    .auto_out_1_a_valid        (_fromCPU_auto_out_1_a_valid),
    .auto_out_1_a_bits_opcode  (_fromCPU_auto_out_1_a_bits_opcode),
    .auto_out_1_a_bits_param   (_fromCPU_auto_out_1_a_bits_param),
    .auto_out_1_a_bits_size    (_fromCPU_auto_out_1_a_bits_size),
    .auto_out_1_a_bits_source  (_fromCPU_auto_out_1_a_bits_source),
    .auto_out_1_a_bits_address (_fromCPU_auto_out_1_a_bits_address),
    .auto_out_1_a_bits_mask    (_fromCPU_auto_out_1_a_bits_mask),
    .auto_out_1_a_bits_data    (_fromCPU_auto_out_1_a_bits_data),
    .auto_out_1_a_bits_corrupt (_fromCPU_auto_out_1_a_bits_corrupt),
    .auto_out_1_d_ready        (_fromCPU_auto_out_1_d_ready),
    .auto_out_1_d_valid        (_aplic_ios_1_regmapOut_valid),
    .auto_out_1_d_bits_opcode  (domainFromCPUIn_1_d_bits_opcode),
    .auto_out_1_d_bits_size    (sizeReg_1),
    .auto_out_1_d_bits_source  (sourceReg_1),
    .auto_out_1_d_bits_data    (_aplic_ios_1_regmapOut_bits_data),
    .auto_out_0_a_ready        (_aplic_ios_0_regmapIn_ready),
    .auto_out_0_a_valid        (_fromCPU_auto_out_0_a_valid),
    .auto_out_0_a_bits_opcode  (_fromCPU_auto_out_0_a_bits_opcode),
    .auto_out_0_a_bits_param   (_fromCPU_auto_out_0_a_bits_param),
    .auto_out_0_a_bits_size    (_fromCPU_auto_out_0_a_bits_size),
    .auto_out_0_a_bits_source  (_fromCPU_auto_out_0_a_bits_source),
    .auto_out_0_a_bits_address (_fromCPU_auto_out_0_a_bits_address),
    .auto_out_0_a_bits_mask    (_fromCPU_auto_out_0_a_bits_mask),
    .auto_out_0_a_bits_data    (_fromCPU_auto_out_0_a_bits_data),
    .auto_out_0_a_bits_corrupt (_fromCPU_auto_out_0_a_bits_corrupt),
    .auto_out_0_d_ready        (_fromCPU_auto_out_0_d_ready),
    .auto_out_0_d_valid        (_aplic_ios_0_regmapOut_valid),
    .auto_out_0_d_bits_opcode  (domainFromCPUIn_d_bits_opcode),
    .auto_out_0_d_bits_size    (sizeReg),
    .auto_out_0_d_bits_source  (sourceReg),
    .auto_out_0_d_bits_data    (_aplic_ios_0_regmapOut_bits_data)
  );
  TLXbar_7 toIMSIC (
    .clock                    (clock),
    .reset                    (reset),
    .auto_in_1_a_ready        (_toIMSIC_auto_in_1_a_ready),
    .auto_in_1_a_valid        (_aplic_ios_1_msi_valid),
    .auto_in_1_a_bits_address (_aplic_ios_1_msi_bits_addr[31:0]),
    .auto_in_1_a_bits_mask
      ({_aplic_ios_1_msi_bits_addr[2] | bits_a_mask_sub_3_2_1
          & _aplic_ios_1_msi_bits_addr[0],
        _aplic_ios_1_msi_bits_addr[2] | bits_a_mask_sub_3_2_1
          & ~(_aplic_ios_1_msi_bits_addr[0]),
        _aplic_ios_1_msi_bits_addr[2] | bits_a_mask_sub_2_2_1
          & _aplic_ios_1_msi_bits_addr[0],
        _aplic_ios_1_msi_bits_addr[2] | bits_a_mask_sub_2_2_1
          & ~(_aplic_ios_1_msi_bits_addr[0]),
        ~(_aplic_ios_1_msi_bits_addr[2]) | bits_a_mask_sub_1_2_1
          & _aplic_ios_1_msi_bits_addr[0],
        ~(_aplic_ios_1_msi_bits_addr[2]) | bits_a_mask_sub_1_2_1
          & ~(_aplic_ios_1_msi_bits_addr[0]),
        ~(_aplic_ios_1_msi_bits_addr[2]) | bits_a_mask_sub_0_2_1
          & _aplic_ios_1_msi_bits_addr[0],
        ~(_aplic_ios_1_msi_bits_addr[2]) | bits_a_mask_sub_0_2_1
          & ~(_aplic_ios_1_msi_bits_addr[0])}),
    .auto_in_1_a_bits_data    ({32'h0, _aplic_ios_1_msi_bits_data}),
    .auto_in_1_d_valid        (_toIMSIC_auto_in_1_d_valid),
    .auto_in_0_a_ready        (_toIMSIC_auto_in_0_a_ready),
    .auto_in_0_a_valid        (_aplic_ios_0_msi_valid),
    .auto_in_0_a_bits_address (_aplic_ios_0_msi_bits_addr[31:0]),
    .auto_in_0_a_bits_mask
      ({_aplic_ios_0_msi_bits_addr[2] | bits_a_mask_sub_3_2
          & _aplic_ios_0_msi_bits_addr[0],
        _aplic_ios_0_msi_bits_addr[2] | bits_a_mask_sub_3_2
          & ~(_aplic_ios_0_msi_bits_addr[0]),
        _aplic_ios_0_msi_bits_addr[2] | bits_a_mask_sub_2_2
          & _aplic_ios_0_msi_bits_addr[0],
        _aplic_ios_0_msi_bits_addr[2] | bits_a_mask_sub_2_2
          & ~(_aplic_ios_0_msi_bits_addr[0]),
        ~(_aplic_ios_0_msi_bits_addr[2]) | bits_a_mask_sub_1_2
          & _aplic_ios_0_msi_bits_addr[0],
        ~(_aplic_ios_0_msi_bits_addr[2]) | bits_a_mask_sub_1_2
          & ~(_aplic_ios_0_msi_bits_addr[0]),
        ~(_aplic_ios_0_msi_bits_addr[2]) | bits_a_mask_sub_0_2
          & _aplic_ios_0_msi_bits_addr[0],
        ~(_aplic_ios_0_msi_bits_addr[2]) | bits_a_mask_sub_0_2
          & ~(_aplic_ios_0_msi_bits_addr[0])}),
    .auto_in_0_a_bits_data    ({32'h0, _aplic_ios_0_msi_bits_data}),
    .auto_in_0_d_valid        (_toIMSIC_auto_in_0_d_valid),
    .auto_out_a_ready         (auto_toIMSIC_out_a_ready),
    .auto_out_a_valid         (auto_toIMSIC_out_a_valid),
    .auto_out_a_bits_size     (auto_toIMSIC_out_a_bits_size),
    .auto_out_a_bits_source   (auto_toIMSIC_out_a_bits_source),
    .auto_out_a_bits_address  (auto_toIMSIC_out_a_bits_address),
    .auto_out_a_bits_mask     (auto_toIMSIC_out_a_bits_mask),
    .auto_out_a_bits_data     (auto_toIMSIC_out_a_bits_data),
    .auto_out_d_ready         (auto_toIMSIC_out_d_ready),
    .auto_out_d_valid         (auto_toIMSIC_out_d_valid),
    .auto_out_d_bits_opcode   (auto_toIMSIC_out_d_bits_opcode),
    .auto_out_d_bits_size     (auto_toIMSIC_out_d_bits_size),
    .auto_out_d_bits_source   (auto_toIMSIC_out_d_bits_source)
  );
  TLMonitor_22 monitor (
    .clock                (clock),
    .reset                (reset),
    .io_in_a_ready        (_aplic_ios_0_regmapIn_ready),
    .io_in_a_valid        (_fromCPU_auto_out_0_a_valid),
    .io_in_a_bits_opcode  (_fromCPU_auto_out_0_a_bits_opcode),
    .io_in_a_bits_param   (_fromCPU_auto_out_0_a_bits_param),
    .io_in_a_bits_size    (_fromCPU_auto_out_0_a_bits_size),
    .io_in_a_bits_source  (_fromCPU_auto_out_0_a_bits_source),
    .io_in_a_bits_address (_fromCPU_auto_out_0_a_bits_address),
    .io_in_a_bits_mask    (_fromCPU_auto_out_0_a_bits_mask),
    .io_in_a_bits_corrupt (_fromCPU_auto_out_0_a_bits_corrupt),
    .io_in_d_ready        (_fromCPU_auto_out_0_d_ready),
    .io_in_d_valid        (_aplic_ios_0_regmapOut_valid),
    .io_in_d_bits_opcode  (domainFromCPUIn_d_bits_opcode),
    .io_in_d_bits_size    (sizeReg),
    .io_in_d_bits_source  (sourceReg)
  );
  TLMonitor_23 monitor_1 (
    .clock                (clock),
    .reset                (reset),
    .io_in_a_ready        (_aplic_ios_1_regmapIn_ready),
    .io_in_a_valid        (_fromCPU_auto_out_1_a_valid),
    .io_in_a_bits_opcode  (_fromCPU_auto_out_1_a_bits_opcode),
    .io_in_a_bits_param   (_fromCPU_auto_out_1_a_bits_param),
    .io_in_a_bits_size    (_fromCPU_auto_out_1_a_bits_size),
    .io_in_a_bits_source  (_fromCPU_auto_out_1_a_bits_source),
    .io_in_a_bits_address (_fromCPU_auto_out_1_a_bits_address),
    .io_in_a_bits_mask    (_fromCPU_auto_out_1_a_bits_mask),
    .io_in_a_bits_corrupt (_fromCPU_auto_out_1_a_bits_corrupt),
    .io_in_d_ready        (_fromCPU_auto_out_1_d_ready),
    .io_in_d_valid        (_aplic_ios_1_regmapOut_valid),
    .io_in_d_bits_opcode  (domainFromCPUIn_1_d_bits_opcode),
    .io_in_d_bits_size    (sizeReg_1),
    .io_in_d_bits_source  (sourceReg_1)
  );
  APLIC aplic (
    .clock                     (clock),
    .reset                     (reset),
    .ios_0_msi_ready           (_toIMSIC_auto_in_0_a_ready),
    .ios_0_msi_valid           (_aplic_ios_0_msi_valid),
    .ios_0_msi_bits_addr       (_aplic_ios_0_msi_bits_addr),
    .ios_0_msi_bits_data       (_aplic_ios_0_msi_bits_data),
    .ios_0_ack                 (_toIMSIC_auto_in_0_d_valid),
    .ios_0_regmapIn_ready      (_aplic_ios_0_regmapIn_ready),
    .ios_0_regmapIn_valid      (_fromCPU_auto_out_0_a_valid),
    .ios_0_regmapIn_bits_read  (_fromCPU_auto_out_0_a_bits_opcode == 3'h4),
    .ios_0_regmapIn_bits_index (_fromCPU_auto_out_0_a_bits_address[13:3]),
    .ios_0_regmapIn_bits_data  (_fromCPU_auto_out_0_a_bits_data),
    .ios_0_regmapIn_bits_mask  (_fromCPU_auto_out_0_a_bits_mask),
    .ios_0_regmapOut_ready     (_fromCPU_auto_out_0_d_ready),
    .ios_0_regmapOut_valid     (_aplic_ios_0_regmapOut_valid),
    .ios_0_regmapOut_bits_read (_aplic_ios_0_regmapOut_bits_read),
    .ios_0_regmapOut_bits_data (_aplic_ios_0_regmapOut_bits_data),
    .ios_1_msi_ready           (_toIMSIC_auto_in_1_a_ready),
    .ios_1_msi_valid           (_aplic_ios_1_msi_valid),
    .ios_1_msi_bits_addr       (_aplic_ios_1_msi_bits_addr),
    .ios_1_msi_bits_data       (_aplic_ios_1_msi_bits_data),
    .ios_1_ack                 (_toIMSIC_auto_in_1_d_valid),
    .ios_1_regmapIn_ready      (_aplic_ios_1_regmapIn_ready),
    .ios_1_regmapIn_valid      (_fromCPU_auto_out_1_a_valid),
    .ios_1_regmapIn_bits_read  (_fromCPU_auto_out_1_a_bits_opcode == 3'h4),
    .ios_1_regmapIn_bits_index (_fromCPU_auto_out_1_a_bits_address[13:3]),
    .ios_1_regmapIn_bits_data  (_fromCPU_auto_out_1_a_bits_data),
    .ios_1_regmapIn_bits_mask  (_fromCPU_auto_out_1_a_bits_mask),
    .ios_1_regmapOut_ready     (_fromCPU_auto_out_1_d_ready),
    .ios_1_regmapOut_valid     (_aplic_ios_1_regmapOut_valid),
    .ios_1_regmapOut_bits_read (_aplic_ios_1_regmapOut_bits_read),
    .ios_1_regmapOut_bits_data (_aplic_ios_1_regmapOut_bits_data),
    .intSrcs_1                 (intSrcs_1),
    .intSrcs_2                 (intSrcs_2),
    .intSrcs_3                 (intSrcs_3),
    .intSrcs_4                 (intSrcs_4),
    .intSrcs_5                 (intSrcs_5),
    .intSrcs_6                 (intSrcs_6),
    .intSrcs_7                 (intSrcs_7),
    .intSrcs_8                 (intSrcs_8),
    .intSrcs_9                 (intSrcs_9),
    .intSrcs_10                (intSrcs_10),
    .intSrcs_11                (intSrcs_11),
    .intSrcs_12                (intSrcs_12),
    .intSrcs_13                (intSrcs_13),
    .intSrcs_14                (intSrcs_14),
    .intSrcs_15                (intSrcs_15),
    .intSrcs_16                (intSrcs_16),
    .intSrcs_17                (intSrcs_17),
    .intSrcs_18                (intSrcs_18),
    .intSrcs_19                (intSrcs_19),
    .intSrcs_20                (intSrcs_20),
    .intSrcs_21                (intSrcs_21),
    .intSrcs_22                (intSrcs_22),
    .intSrcs_23                (intSrcs_23),
    .intSrcs_24                (intSrcs_24),
    .intSrcs_25                (intSrcs_25),
    .intSrcs_26                (intSrcs_26),
    .intSrcs_27                (intSrcs_27),
    .intSrcs_28                (intSrcs_28),
    .intSrcs_29                (intSrcs_29),
    .intSrcs_30                (intSrcs_30),
    .intSrcs_31                (intSrcs_31),
    .intSrcs_32                (intSrcs_32),
    .intSrcs_33                (intSrcs_33),
    .intSrcs_34                (intSrcs_34),
    .intSrcs_35                (intSrcs_35),
    .intSrcs_36                (intSrcs_36),
    .intSrcs_37                (intSrcs_37),
    .intSrcs_38                (intSrcs_38),
    .intSrcs_39                (intSrcs_39),
    .intSrcs_40                (intSrcs_40),
    .intSrcs_41                (intSrcs_41),
    .intSrcs_42                (intSrcs_42),
    .intSrcs_43                (intSrcs_43),
    .intSrcs_44                (intSrcs_44),
    .intSrcs_45                (intSrcs_45),
    .intSrcs_46                (intSrcs_46),
    .intSrcs_47                (intSrcs_47),
    .intSrcs_48                (intSrcs_48),
    .intSrcs_49                (intSrcs_49),
    .intSrcs_50                (intSrcs_50),
    .intSrcs_51                (intSrcs_51),
    .intSrcs_52                (intSrcs_52),
    .intSrcs_53                (intSrcs_53),
    .intSrcs_54                (intSrcs_54),
    .intSrcs_55                (intSrcs_55),
    .intSrcs_56                (intSrcs_56),
    .intSrcs_57                (intSrcs_57),
    .intSrcs_58                (intSrcs_58),
    .intSrcs_59                (intSrcs_59),
    .intSrcs_60                (intSrcs_60),
    .intSrcs_61                (intSrcs_61),
    .intSrcs_62                (intSrcs_62),
    .intSrcs_63                (intSrcs_63),
    .intSrcs_64                (intSrcs_64),
    .intSrcs_65                (intSrcs_65),
    .intSrcs_66                (intSrcs_66),
    .intSrcs_67                (intSrcs_67),
    .intSrcs_68                (intSrcs_68),
    .intSrcs_69                (intSrcs_69),
    .intSrcs_70                (intSrcs_70),
    .intSrcs_71                (intSrcs_71),
    .intSrcs_72                (intSrcs_72),
    .intSrcs_73                (intSrcs_73),
    .intSrcs_74                (intSrcs_74),
    .intSrcs_75                (intSrcs_75),
    .intSrcs_76                (intSrcs_76),
    .intSrcs_77                (intSrcs_77),
    .intSrcs_78                (intSrcs_78),
    .intSrcs_79                (intSrcs_79),
    .intSrcs_80                (intSrcs_80),
    .intSrcs_81                (intSrcs_81),
    .intSrcs_82                (intSrcs_82),
    .intSrcs_83                (intSrcs_83),
    .intSrcs_84                (intSrcs_84),
    .intSrcs_85                (intSrcs_85),
    .intSrcs_86                (intSrcs_86),
    .intSrcs_87                (intSrcs_87),
    .intSrcs_88                (intSrcs_88),
    .intSrcs_89                (intSrcs_89),
    .intSrcs_90                (intSrcs_90),
    .intSrcs_91                (intSrcs_91),
    .intSrcs_92                (intSrcs_92),
    .intSrcs_93                (intSrcs_93),
    .intSrcs_94                (intSrcs_94),
    .intSrcs_95                (intSrcs_95),
    .intSrcs_96                (intSrcs_96),
    .intSrcs_97                (intSrcs_97),
    .intSrcs_98                (intSrcs_98),
    .intSrcs_99                (intSrcs_99),
    .intSrcs_100               (intSrcs_100),
    .intSrcs_101               (intSrcs_101),
    .intSrcs_102               (intSrcs_102),
    .intSrcs_103               (intSrcs_103),
    .intSrcs_104               (intSrcs_104),
    .intSrcs_105               (intSrcs_105),
    .intSrcs_106               (intSrcs_106),
    .intSrcs_107               (intSrcs_107),
    .intSrcs_108               (intSrcs_108),
    .intSrcs_109               (intSrcs_109),
    .intSrcs_110               (intSrcs_110),
    .intSrcs_111               (intSrcs_111),
    .intSrcs_112               (intSrcs_112),
    .intSrcs_113               (intSrcs_113),
    .intSrcs_114               (intSrcs_114),
    .intSrcs_115               (intSrcs_115),
    .intSrcs_116               (intSrcs_116),
    .intSrcs_117               (intSrcs_117),
    .intSrcs_118               (intSrcs_118),
    .intSrcs_119               (intSrcs_119),
    .intSrcs_120               (intSrcs_120),
    .intSrcs_121               (intSrcs_121),
    .intSrcs_122               (intSrcs_122),
    .intSrcs_123               (intSrcs_123),
    .intSrcs_124               (intSrcs_124),
    .intSrcs_125               (intSrcs_125),
    .intSrcs_126               (intSrcs_126),
    .intSrcs_127               (intSrcs_127)
  );
endmodule

