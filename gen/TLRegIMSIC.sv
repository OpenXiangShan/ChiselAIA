// Generated by CIRCT firtool-1.62.0
// Standard header to adapt well known macros for prints and assertions.

// Users can define 'ASSERT_VERBOSE_COND' to add an extra gate to assert error printing.
`ifndef ASSERT_VERBOSE_COND_
  `ifdef ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ (`ASSERT_VERBOSE_COND)
  `else  // ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ 1
  `endif // ASSERT_VERBOSE_COND
`endif // not def ASSERT_VERBOSE_COND_

// Users can define 'STOP_COND' to add an extra gate to stop conditions.
`ifndef STOP_COND_
  `ifdef STOP_COND
    `define STOP_COND_ (`STOP_COND)
  `else  // STOP_COND
    `define STOP_COND_ 1
  `endif // STOP_COND
`endif // not def STOP_COND_

module TLRegIMSIC(
  input         clock,
  input         reset,
  output        auto_xbar_in_a_ready,
  input         auto_xbar_in_a_valid,
  input  [2:0]  auto_xbar_in_a_bits_opcode,
  input  [2:0]  auto_xbar_in_a_bits_param,
  input  [1:0]  auto_xbar_in_a_bits_size,
  input  [5:0]  auto_xbar_in_a_bits_source,
  input  [16:0] auto_xbar_in_a_bits_address,
  input  [7:0]  auto_xbar_in_a_bits_mask,
  input  [63:0] auto_xbar_in_a_bits_data,
  input         auto_xbar_in_a_bits_corrupt,
  input         auto_xbar_in_d_ready,
  output        auto_xbar_in_d_valid,
  output [2:0]  auto_xbar_in_d_bits_opcode,
  output [1:0]  auto_xbar_in_d_bits_size,
  output [5:0]  auto_xbar_in_d_bits_source,
  output [10:0] io_seteipnum,
  output        msiio_msi_vld_req,
  input         msiio_msi_vld_ack
);

  reg         msi_vld_req;
  wire        _fifo_sync_io_enq_ready;
  wire        _fifo_sync_io_deq_valid;
  wire [10:0] _fifo_sync_io_deq_bits;
  wire        _reggen_regmapIOs_0_1_ready;
  wire        _reggen_regmapIOs_0_2_valid;
  wire        _reggen_regmapIOs_0_2_bits_read;
  wire        _reggen_regmapIOs_1_1_ready;
  wire        _reggen_regmapIOs_1_2_valid;
  wire        _reggen_regmapIOs_1_2_bits_read;
  wire [10:0] _reggen_io_seteipnum;
  wire        _reggen_io_valid;
  wire        _xbar_auto_out_1_a_valid;
  wire [2:0]  _xbar_auto_out_1_a_bits_opcode;
  wire [2:0]  _xbar_auto_out_1_a_bits_param;
  wire [1:0]  _xbar_auto_out_1_a_bits_size;
  wire [5:0]  _xbar_auto_out_1_a_bits_source;
  wire [16:0] _xbar_auto_out_1_a_bits_address;
  wire [7:0]  _xbar_auto_out_1_a_bits_mask;
  wire [63:0] _xbar_auto_out_1_a_bits_data;
  wire        _xbar_auto_out_1_a_bits_corrupt;
  wire        _xbar_auto_out_1_d_ready;
  wire        _xbar_auto_out_0_a_valid;
  wire [2:0]  _xbar_auto_out_0_a_bits_opcode;
  wire [2:0]  _xbar_auto_out_0_a_bits_param;
  wire [1:0]  _xbar_auto_out_0_a_bits_size;
  wire [5:0]  _xbar_auto_out_0_a_bits_source;
  wire [11:0] _xbar_auto_out_0_a_bits_address;
  wire [7:0]  _xbar_auto_out_0_a_bits_mask;
  wire [63:0] _xbar_auto_out_0_a_bits_data;
  wire        _xbar_auto_out_0_a_bits_corrupt;
  wire        _xbar_auto_out_0_d_ready;
  reg         msi_vld_ack_soc_1f;
  reg  [10:0] msi_id_data;
  wire        _reggen_regmapIOs_0_1_bits_read_T = _xbar_auto_out_0_a_bits_opcode == 3'h4;
  reg  [5:0]  sourceReg;
  reg  [1:0]  sizeReg;
  wire        intfileFromMemIn_a_ready =
    (_reggen_regmapIOs_0_1_bits_read_T | _fifo_sync_io_enq_ready)
    & _reggen_regmapIOs_0_1_ready;
  wire        intfileFromMemIn_d_valid =
    (_reggen_regmapIOs_0_2_bits_read | _fifo_sync_io_enq_ready)
    & _reggen_regmapIOs_0_2_valid;
  wire [2:0]  intfileFromMemIn_d_bits_opcode = {2'h0, _reggen_regmapIOs_0_2_bits_read};
  wire        _reggen_regmapIOs_1_1_bits_read_T = _xbar_auto_out_1_a_bits_opcode == 3'h4;
  reg  [5:0]  sourceReg_1;
  reg  [1:0]  sizeReg_1;
  wire        intfileFromMemIn_1_a_ready =
    (_reggen_regmapIOs_1_1_bits_read_T | _fifo_sync_io_enq_ready)
    & _reggen_regmapIOs_1_1_ready;
  wire        intfileFromMemIn_1_d_valid =
    (_reggen_regmapIOs_1_2_bits_read | _fifo_sync_io_enq_ready)
    & _reggen_regmapIOs_1_2_valid;
  wire [2:0]  intfileFromMemIn_1_d_bits_opcode = {2'h0, _reggen_regmapIOs_1_2_bits_read};
  always @(posedge clock) begin
    if (reset) begin
      msi_vld_req <= 1'h0;
      msi_id_data <= 11'h0;
      sourceReg <= 6'h0;
      sizeReg <= 2'h0;
      sourceReg_1 <= 6'h0;
      sizeReg_1 <= 2'h0;
    end
    else begin
      msi_vld_req <=
        _fifo_sync_io_deq_valid | ~(msiio_msi_vld_ack & ~msi_vld_ack_soc_1f)
        & msi_vld_req;
      if (~msi_vld_req & _fifo_sync_io_deq_valid)
        msi_id_data <= _fifo_sync_io_deq_bits;
      if (_xbar_auto_out_0_a_valid) begin
        sourceReg <= _xbar_auto_out_0_a_bits_source;
        sizeReg <= _xbar_auto_out_0_a_bits_size;
      end
      if (_xbar_auto_out_1_a_valid) begin
        sourceReg_1 <= _xbar_auto_out_1_a_bits_source;
        sizeReg_1 <= _xbar_auto_out_1_a_bits_size;
      end
    end
    msi_vld_ack_soc_1f <= msiio_msi_vld_ack;
  end // always @(posedge)
  TLXbar_2 xbar (
    .clock                     (clock),
    .reset                     (reset),
    .auto_in_a_ready           (auto_xbar_in_a_ready),
    .auto_in_a_valid           (auto_xbar_in_a_valid),
    .auto_in_a_bits_opcode     (auto_xbar_in_a_bits_opcode),
    .auto_in_a_bits_param      (auto_xbar_in_a_bits_param),
    .auto_in_a_bits_size       (auto_xbar_in_a_bits_size),
    .auto_in_a_bits_source     (auto_xbar_in_a_bits_source),
    .auto_in_a_bits_address    (auto_xbar_in_a_bits_address),
    .auto_in_a_bits_mask       (auto_xbar_in_a_bits_mask),
    .auto_in_a_bits_data       (auto_xbar_in_a_bits_data),
    .auto_in_a_bits_corrupt    (auto_xbar_in_a_bits_corrupt),
    .auto_in_d_ready           (auto_xbar_in_d_ready),
    .auto_in_d_valid           (auto_xbar_in_d_valid),
    .auto_in_d_bits_opcode     (auto_xbar_in_d_bits_opcode),
    .auto_in_d_bits_size       (auto_xbar_in_d_bits_size),
    .auto_in_d_bits_source     (auto_xbar_in_d_bits_source),
    .auto_out_1_a_ready        (intfileFromMemIn_1_a_ready),
    .auto_out_1_a_valid        (_xbar_auto_out_1_a_valid),
    .auto_out_1_a_bits_opcode  (_xbar_auto_out_1_a_bits_opcode),
    .auto_out_1_a_bits_param   (_xbar_auto_out_1_a_bits_param),
    .auto_out_1_a_bits_size    (_xbar_auto_out_1_a_bits_size),
    .auto_out_1_a_bits_source  (_xbar_auto_out_1_a_bits_source),
    .auto_out_1_a_bits_address (_xbar_auto_out_1_a_bits_address),
    .auto_out_1_a_bits_mask    (_xbar_auto_out_1_a_bits_mask),
    .auto_out_1_a_bits_data    (_xbar_auto_out_1_a_bits_data),
    .auto_out_1_a_bits_corrupt (_xbar_auto_out_1_a_bits_corrupt),
    .auto_out_1_d_ready        (_xbar_auto_out_1_d_ready),
    .auto_out_1_d_valid        (intfileFromMemIn_1_d_valid),
    .auto_out_1_d_bits_opcode  (intfileFromMemIn_1_d_bits_opcode),
    .auto_out_1_d_bits_size    (sizeReg_1),
    .auto_out_1_d_bits_source  (sourceReg_1),
    .auto_out_0_a_ready        (intfileFromMemIn_a_ready),
    .auto_out_0_a_valid        (_xbar_auto_out_0_a_valid),
    .auto_out_0_a_bits_opcode  (_xbar_auto_out_0_a_bits_opcode),
    .auto_out_0_a_bits_param   (_xbar_auto_out_0_a_bits_param),
    .auto_out_0_a_bits_size    (_xbar_auto_out_0_a_bits_size),
    .auto_out_0_a_bits_source  (_xbar_auto_out_0_a_bits_source),
    .auto_out_0_a_bits_address (_xbar_auto_out_0_a_bits_address),
    .auto_out_0_a_bits_mask    (_xbar_auto_out_0_a_bits_mask),
    .auto_out_0_a_bits_data    (_xbar_auto_out_0_a_bits_data),
    .auto_out_0_a_bits_corrupt (_xbar_auto_out_0_a_bits_corrupt),
    .auto_out_0_d_ready        (_xbar_auto_out_0_d_ready),
    .auto_out_0_d_valid        (intfileFromMemIn_d_valid),
    .auto_out_0_d_bits_opcode  (intfileFromMemIn_d_bits_opcode),
    .auto_out_0_d_bits_size    (sizeReg),
    .auto_out_0_d_bits_source  (sourceReg)
  );
  TLMonitor_5 monitor (
    .clock                (clock),
    .reset                (reset),
    .io_in_a_ready        (intfileFromMemIn_a_ready),
    .io_in_a_valid        (_xbar_auto_out_0_a_valid),
    .io_in_a_bits_opcode  (_xbar_auto_out_0_a_bits_opcode),
    .io_in_a_bits_param   (_xbar_auto_out_0_a_bits_param),
    .io_in_a_bits_size    (_xbar_auto_out_0_a_bits_size),
    .io_in_a_bits_source  (_xbar_auto_out_0_a_bits_source),
    .io_in_a_bits_address (_xbar_auto_out_0_a_bits_address),
    .io_in_a_bits_mask    (_xbar_auto_out_0_a_bits_mask),
    .io_in_a_bits_corrupt (_xbar_auto_out_0_a_bits_corrupt),
    .io_in_d_ready        (_xbar_auto_out_0_d_ready),
    .io_in_d_valid        (intfileFromMemIn_d_valid),
    .io_in_d_bits_opcode  (intfileFromMemIn_d_bits_opcode),
    .io_in_d_bits_size    (sizeReg),
    .io_in_d_bits_source  (sourceReg)
  );
  TLMonitor_6 monitor_1 (
    .clock                (clock),
    .reset                (reset),
    .io_in_a_ready        (intfileFromMemIn_1_a_ready),
    .io_in_a_valid        (_xbar_auto_out_1_a_valid),
    .io_in_a_bits_opcode  (_xbar_auto_out_1_a_bits_opcode),
    .io_in_a_bits_param   (_xbar_auto_out_1_a_bits_param),
    .io_in_a_bits_size    (_xbar_auto_out_1_a_bits_size),
    .io_in_a_bits_source  (_xbar_auto_out_1_a_bits_source),
    .io_in_a_bits_address (_xbar_auto_out_1_a_bits_address),
    .io_in_a_bits_mask    (_xbar_auto_out_1_a_bits_mask),
    .io_in_a_bits_corrupt (_xbar_auto_out_1_a_bits_corrupt),
    .io_in_d_ready        (_xbar_auto_out_1_d_ready),
    .io_in_d_valid        (intfileFromMemIn_1_d_valid),
    .io_in_d_bits_opcode  (intfileFromMemIn_1_d_bits_opcode),
    .io_in_d_bits_size    (sizeReg_1),
    .io_in_d_bits_source  (sourceReg_1)
  );
  RegGen reggen (
    .clock                    (clock),
    .reset                    (reset),
    .regmapIOs_0_1_ready      (_reggen_regmapIOs_0_1_ready),
    .regmapIOs_0_1_valid      (_xbar_auto_out_0_a_valid),
    .regmapIOs_0_1_bits_read  (_reggen_regmapIOs_0_1_bits_read_T),
    .regmapIOs_0_1_bits_index (_xbar_auto_out_0_a_bits_address[11:3]),
    .regmapIOs_0_1_bits_data  (_xbar_auto_out_0_a_bits_data),
    .regmapIOs_0_1_bits_mask  (_xbar_auto_out_0_a_bits_mask),
    .regmapIOs_0_2_ready      (_xbar_auto_out_0_d_ready),
    .regmapIOs_0_2_valid      (_reggen_regmapIOs_0_2_valid),
    .regmapIOs_0_2_bits_read  (_reggen_regmapIOs_0_2_bits_read),
    .regmapIOs_1_1_ready      (_reggen_regmapIOs_1_1_ready),
    .regmapIOs_1_1_valid      (_xbar_auto_out_1_a_valid),
    .regmapIOs_1_1_bits_read  (_reggen_regmapIOs_1_1_bits_read_T),
    .regmapIOs_1_1_bits_index (_xbar_auto_out_1_a_bits_address[14:3]),
    .regmapIOs_1_1_bits_data  (_xbar_auto_out_1_a_bits_data),
    .regmapIOs_1_1_bits_mask  (_xbar_auto_out_1_a_bits_mask),
    .regmapIOs_1_2_ready      (_xbar_auto_out_1_d_ready),
    .regmapIOs_1_2_valid      (_reggen_regmapIOs_1_2_valid),
    .regmapIOs_1_2_bits_read  (_reggen_regmapIOs_1_2_bits_read),
    .io_seteipnum             (_reggen_io_seteipnum),
    .io_valid                 (_reggen_io_valid)
  );
  Queue8_UInt11 fifo_sync (
    .clock        (clock),
    .reset        (reset),
    .io_enq_ready (_fifo_sync_io_enq_ready),
    .io_enq_valid (_reggen_io_valid),
    .io_enq_bits  (_reggen_io_seteipnum),
    .io_deq_ready (~msi_vld_req),
    .io_deq_valid (_fifo_sync_io_deq_valid),
    .io_deq_bits  (_fifo_sync_io_deq_bits)
  );
  assign io_seteipnum = msi_id_data;
  assign msiio_msi_vld_req = msi_vld_req;
endmodule

